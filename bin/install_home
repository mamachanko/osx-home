#!/usr/bin/env bash

set -euo pipefail

cd "$(dirname "$0")"/..

main() {
  say "installing ..."

  install_all
  configure_all

  say "done installing."
}

install_all() {
  install_config
  install_homebrew
  install_software
  install_kitty_themes
  install_python
}

install_config() {
  local homedir_source dotfiles_dir

  homedir_source=$(pwd)
  dotfiles_dir="${homedir_source}/dotfiles"

  for dot_item in $(/bin/ls "$dotfiles_dir"); do
    link_target="$HOME/.${dot_item}"
    rm -f "$link_target"
    ln -sfv "${dotfiles_dir}/${dot_item}" "$link_target"
  done
}

configure_all() {
  configure_1pwd
  configure_macos
  configure_tmux
  configure_fzf
  configure_neovim
  configure_git
}

configure_1pwd() {
  eval "$(bin/1pwd init)"
}

configure_macos() {
  configure_bash_as_shell
  configure_keyrepeat
  configure_dock_preferences
  configure_tap_to_click
  configure_host
}

configure_bash_as_shell() {
  if ! echo "$SHELL" | grep bash; then
    say "configuring Bash as default shell"
    chsh -s /bin/bash
  else
    say "Bash is already configured as default shell"
  fi
}

configure_keyrepeat() {
   defaults write NSGlobalDomain KeyRepeat -int 2
   defaults write NSGlobalDomain InitialKeyRepeat -int 25
   defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
}

configure_dock_preferences() {
  defaults write "com.apple.dock" "orientation" -string "left"
  defaults write "com.apple.dock" "autohide" -bool "true"
  defaults write "com.apple.dock" "persistent-apps" -array
  killall Dock
}

configure_tap_to_click() {
  defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
}

configure_host() {
  hostname="$(bin/1pwd get "$(/bin1pwd latest-repave)" hostname)"
  set_hostname "$hostname"
}

install_homebrew() {
  if [[ $(brew --version 2>/dev/null) ]]; then
    say "üç∫ updating homebrew ..."
    brew update
  else
    say "üç∫ installing homebrew ..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    say "‚úÖ installed homebrew."
  fi
}

install_software() {
  say "will brew install:"
  brew bundle list --all --file=~/.config/osx-home/Brewfile
  say "let's brew"
  brew bundle install --file=~/.config/osx-home/Brewfile
  brew bundle check --file=~/.config/osx-home/Brewfile
  say "done brewing"
}

install_kitty_themes() {
  bin/kitty_theme install
}

install_python() {
  python_version=3.9.0
  pyenv install --skip-existing "$python_version"
  pyenv global "$python_version"

}

configure_tmux() {
  rm -rf ~/.tmux
  curl -fsSL https://raw.githubusercontent.com/luan/tmuxfiles/master/install | bash
  cat <<EOF >> ~/.tmux.conf 

# Set Bash as the default shell in tmux sessions.
set-option -g default-shell /usr/local/bin/bash

EOF
}

configure_fzf() {
  "$(brew --prefix)/opt/fzf/install" \
    --completion \
    --key-bindings \
    --update-rc \
    --no-fish
}

configure_neovim() {
  say "configuring neovim ..."

  PATH="$(pyenv root)/shims:$PATH"
  python -m pip install --upgrade pip
  python -m pip install --upgrade pynvim

  nvim -c "PlugInstall" -c "qall" --headless
  nvim -c "PlugUpdate" -c "qall" --headless
  nvim -c "UpdateRemotePlugins" -c "qall" --headless

  say "done configuring neovim."
}

configure_git() {
  git remote set-url origin git@github.com:mamachanko/osx-home.git
  git config --global user.name "mamachanko"
  git config --global user.email "bfahc2cbv@relay.firefox.com"
}

say() {
  local message

  message=${1:=""}

  echo
  echo "  $message"
  echo
}

main

