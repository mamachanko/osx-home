#!/usr/bin/env bash

set -euo pipefail

cd "$(dirname "$0")"/..

main() {
  echo
  echo "üë∑ installing ..."
  echo

  setup_macos

  install_config
  install_homebrew
  install_software
  install_kitty_themes

  setup_tmux
  setup_fzf
  setup_neovim
  setup_git

  echo
  echo "üë∑ done installing. ‚úÖ"
  echo
}

install_config() {
  local homedir_source=$(pwd)
  local dotfiles_dir="${homedir_source}/dotfiles"

  if [[ ! -L ~/.config ]]; then
    ln -sFfv "${dotfiles_dir}/dot.config" ~/.config
  fi

  ln -sfv "${homedir_source}/vendor" ~/vendor

  ln -sfv "${dotfiles_dir}/dot.profile" ~/.profile
  ln -sfv "${dotfiles_dir}/dot.bashrc" ~/.bashrc
  ln -sfv "${dotfiles_dir}/dot.zshrc" ~/.zshrc
}

setup_macos() {
  set_bash_as_shell
  set_keyrepeat
  set_dock_preferences
  set_tap_to_click
}

set_bash_as_shell() {
  if echo $SHELL | grep bash; then
    echo setting Bash
    chsh -s /bin/bash
  else
    echo Bash is already set
  fi
}

set_keyrepeat() {
   defaults write NSGlobalDomain KeyRepeat -int 2
   defaults write NSGlobalDomain InitialKeyRepeat -int 25
   defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
}

set_dock_preferences() {
  defaults write "com.apple.dock" "orientation" -string "left"
  defaults write "com.apple.dock" "autohide" -bool "true"
  defaults write "com.apple.dock" "persistent-apps" -array
  killall Dock
}

set_tap_to_click() {
  defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
}

install_homebrew() {
  if [[ $(brew --version 2>/dev/null) ]]; then
    echo
    echo "üç∫ updating homebrew ..."
    echo
    brew update
  else
    echo
    echo "üç∫ installing homebrew ..."
    echo
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    echo
    echo "‚úÖ installed homebrew."
  fi
}

install_software() {
  echo
  echo "  will brew install:"
  echo
  brew bundle list --all --file=~/.config/osx-home/Brewfile
  echo
  echo "  let's brew"
  echo
  brew bundle install --file=~/.config/osx-home/Brewfile
  brew bundle check --file=~/.config/osx-home/Brewfile
  echo
  echo "  done brewing"
  echo
}

install_kitty_themes() {
  bin/kitty_theme install
}

setup_tmux() {
  rm -rf ~/.tmux
  curl -fsSL https://raw.githubusercontent.com/luan/tmuxfiles/master/install | bash
  cat <<EOF >> ~/.tmux.conf 

# Set Bash as the default shell in tmux sessions.
set-option -g default-shell /usr/local/bin/bash

EOF
}

setup_fzf() {
  $(brew --prefix)/opt/fzf/install \
    --completion \
    --key-bindings \
    --update-rc \
    --no-fish
}

setup_neovim() {
  echo
  echo "üìù setting up neovim ..."
  echo
  nvim -c "PlugInstall" -c "qall" --headless
  nvim -c "PlugUpdate" -c "qall" --headless
  nvim -c "UpdateRemotePlugins" -c "qall" --headless
  echo
  echo "‚úÖ set up neovim."
  echo
}

setup_git() {
  git config --global user.name "mamachanko"
  git config --global user.email "bfahc2cbv@relay.firefox.com"
}

main

