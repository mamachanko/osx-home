#!/usr/bin/env bash

set -euo pipefail

main() {
  local command=${1:-help}

  case $command in
    init) init;;
    login) login;;
    list)
      ensure_logged_in
      list_items
      ;;
    find)
      ensure_logged_in
      shift
      find_items "$@"
      ;;
    get)
      ensure_logged_in
      shift
      get_item "$@"
      ;;
    latest-repave)
      ensure_logged_in
      get_latest_repave
      ;;
    *) help;;
  esac
}

ensure_logged_in() {
  if ! op list vaults > /dev/null; then
    eval "$(op signin my)"
  fi
}

init() {
  if [[ -f ~/.config/op/config ]]; then
    echo echo "Already initialized."
  else
    op signin my.1password.com sugardubz@gmail.com
  fi
}

login() {
  op signin my
}

list_items() {
  op list items | jq --raw-output '.[] | .overview.title'
}

find_items() {
  local pattern="${1:?}"

  list_items | grep -i "$pattern"
}

get_item() {
  local item_name item_field result;

  item_name=${1:?}
  item_field_name=${2:-""}
  result=""

  item=$(op get item "$item_name")

  if [[ -z "$item_field_name" ]]; then
    result=$(echo "$item" | jq .)
  else
    item_field=$(echo "$item" \
      | jq --raw-output ".details.sections[]
          | select(.fields)
          | .fields[]
          | select(.t == \"${item_field_name}\")
          | .v")

    if [[ -z "$item_field" ]]; then
      item_field=$(echo "$item" \
        | jq --raw-output ".details
            | select(.fields)
            | .fields[]
            | select(.name == \"${item_field_name}\")
            | .value")
    fi

    result="$item_field"
  fi

  echo "$result"
}

get_latest_repave() {
  find_items repave | sort | tail -n1
}

help() {
  echo "usage: $0 get [ NAME ] [ FIELD ]"
}

main "$@"

